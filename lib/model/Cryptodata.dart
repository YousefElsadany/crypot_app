// // هذا الكلاس مبني من أجل تخزين الداتا المجلوبة وتحويلها من جسون الى دارت

// class Autogenerated {
//   late String remark;
//   late String status;
//   late Message message;
//   late Data data;

//   Autogenerated(this.remark, this.status, this.message, this.data);

//   Autogenerated.fromJson(Map<String, dynamic> json) {
//     remark = json['remark'];
//     status = json['status'];
//     message = json['message'] ;
//     data = json['data'] ;
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = <String, dynamic>{};
//     data['remark'] = remark;
//     data['status'] = status;
//     data['message'] = message.toJson();
//     data['data'] = this.data.toJson();
//     return data;
//   }
// }

// class Message {
//   late List<String> success;

//   Message(this.success);

//   Message.fromJson(Map<String, dynamic> json) {
//     success = json['success'].cast<String>();
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = <String, dynamic>{};
//     data['success'] = success;
//     return data;
//   }
// }

// class Data {
//   late List<Cryptos> cryptos;

//   Data(this.cryptos);

//   Data.fromJson(Map<String, dynamic> json) {
//     if (json['cryptos'] != null) {

//       json['cryptos'].forEach((v) {
//         cryptos.add(Cryptos.fromJson(v));
//       });
//     }
//   }

//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = <String, dynamic>{};
//     data['cryptos'] = cryptos.map((v) => v.toJson()).toList();
//     return data;
//   }
// }

// class Cryptos {
//   late int id;
//   late String name;
//   late String code;
//   late String symbol;
//   late String rate;
//   late String depositChargeFixed;
//   late String depositChargePercent;
//   late String withdrawChargeFixed;
//   late String withdrawChargePercent;
//   late String status;
//   late String image;
//   late String createdAt;
//   late String updatedAt;

//   Cryptos(
//       this.id,
//         this.name,
//         this.code,
//         this.symbol,
//         this.rate,
//         this.depositChargeFixed,
//         this.depositChargePercent,
//         this.withdrawChargeFixed,
//         this.withdrawChargePercent,
//         this.status,
//         this.image,
//         this.createdAt,
//         this.updatedAt);

//   Cryptos.fromJson(Map<String, dynamic> json) {
//     id = json['id'];
//     name = json['name'];
//     code = json['code'];
//     symbol = json['symbol'];
//     rate = json['rate'];
//     depositChargeFixed = json['deposit_charge_fixed'];
//     depositChargePercent = json['deposit_charge_percent'];
//     withdrawChargeFixed = json['withdraw_charge_fixed'];
//     withdrawChargePercent = json['withdraw_charge_percent'];
//     status = json['status'];
//     image = json['image'];
//     createdAt = json['created_at'];
//     updatedAt = json['updated_at'];
//   }







//   Map<String, dynamic> toJson() {
//     final Map<String, dynamic> data = <String, dynamic>{};
//     data['id'] = id;
//     data['name'] = name;
//     data['code'] = code;
//     data['symbol'] = symbol;
//     data['rate'] = rate;
//     data['deposit_charge_fixed'] = depositChargeFixed;
//     data['deposit_charge_percent'] = depositChargePercent;
//     data['withdraw_charge_fixed'] = withdrawChargeFixed;
//     data['withdraw_charge_percent'] = withdrawChargePercent;
//     data['status'] = status;
//     data['image'] = image;
//     data['created_at'] = createdAt;
//     data['updated_at'] = updatedAt;
//     return data;
//   }
// }

class CryptoDataModel {
  Status? status;
  List<Data>? data;

  CryptoDataModel({this.status, this.data});

  CryptoDataModel.fromJson(Map<String, dynamic> json) {
    status =
        json['status'] != null ? Status.fromJson(json['status']) : null;
    if (json['data'] != null) {
      data = <Data>[];
      json['data'].forEach((v) {
        data!.add(Data.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    if (status != null) {
      data['status'] = status!.toJson();
    }
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Status {
  String? timestamp;
  dynamic errorCode;
  dynamic errorMessage;
  dynamic elapsed;
  dynamic creditCount;
  dynamic notice;
  dynamic totalCount;

  Status(
      {this.timestamp,
      this.errorCode,
      this.errorMessage,
      this.elapsed,
      this.creditCount,
      this.notice,
      this.totalCount});

  Status.fromJson(Map<String, dynamic> json) {
    timestamp = json['timestamp'];
    errorCode = json['error_code'];
    errorMessage = json['error_message'];
    elapsed = json['elapsed'];
    creditCount = json['credit_count'];
    notice = json['notice'];
    totalCount = json['total_count'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['timestamp'] = timestamp;
    data['error_code'] = errorCode;
    data['error_message'] = errorMessage;
    data['elapsed'] = elapsed;
    data['credit_count'] = creditCount;
    data['notice'] = notice;
    data['total_count'] = totalCount;
    return data;
  }
}

class Data {
  dynamic id;
  String? name;
  String? symbol;
  String? slug;
  dynamic numMarketPairs;
  String? dateAdded;
  List<String>? tags;
  dynamic maxSupply;
  dynamic circulatingSupply;
  dynamic totalSupply;
  bool? infiniteSupply;
  Platform? platform;
  dynamic cmcRank;
  dynamic selfReportedCirculatingSupply;
  dynamic selfReportedMarketCap;
  dynamic tvlRatio;
  String? lastUpdated;
  Quote? quote;

  Data(
      {this.id,
      this.name,
      this.symbol,
      this.slug,
      this.numMarketPairs,
      this.dateAdded,
      this.tags,
      this.maxSupply,
      this.circulatingSupply,
      this.totalSupply,
      this.infiniteSupply,
      this.platform,
      this.cmcRank,
      this.selfReportedCirculatingSupply,
      this.selfReportedMarketCap,
      this.tvlRatio,
      this.lastUpdated,
      this.quote});

  Data.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    symbol = json['symbol'];
    slug = json['slug'];
    numMarketPairs = json['num_market_pairs'];
    dateAdded = json['date_added'];
    tags = json['tags'].cast<String>();
    maxSupply = json['max_supply'];
    circulatingSupply = json['circulating_supply'];
    totalSupply = json['total_supply'];
    infiniteSupply = json['infinite_supply'];
    platform = json['platform'] != null
        ? Platform.fromJson(json['platform'])
        : null;
    cmcRank = json['cmc_rank'];
    selfReportedCirculatingSupply = json['self_reported_circulating_supply'];
    selfReportedMarketCap = json['self_reported_market_cap'];
    tvlRatio = json['tvl_ratio'];
    lastUpdated = json['last_updated'];
    quote = json['quote'] != null ? Quote.fromJson(json['quote']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['symbol'] = symbol;
    data['slug'] = slug;
    data['num_market_pairs'] = numMarketPairs;
    data['date_added'] = dateAdded;
    data['tags'] = tags;
    data['max_supply'] = maxSupply;
    data['circulating_supply'] = circulatingSupply;
    data['total_supply'] = totalSupply;
    data['infinite_supply'] = infiniteSupply;
    if (platform != null) {
      data['platform'] = platform!.toJson();
    }
    data['cmc_rank'] = cmcRank;
    data['self_reported_circulating_supply'] =
        selfReportedCirculatingSupply;
    data['self_reported_market_cap'] = selfReportedMarketCap;
    data['tvl_ratio'] = tvlRatio;
    data['last_updated'] = lastUpdated;
    if (quote != null) {
      data['quote'] = quote!.toJson();
    }
    return data;
  }
}

class Platform {
  dynamic id;
  String? name;
  String? symbol;
  String? slug;
  String? tokenAddress;

  Platform({this.id, this.name, this.symbol, this.slug, this.tokenAddress});

  Platform.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    symbol = json['symbol'];
    slug = json['slug'];
    tokenAddress = json['token_address'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['symbol'] = symbol;
    data['slug'] = slug;
    data['token_address'] = tokenAddress;
    return data;
  }
}

class Quote {
  USD? uSD;

  Quote({this.uSD});

  Quote.fromJson(Map<String, dynamic> json) {
    uSD = json['USD'] != null ? USD.fromJson(json['USD']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    if (uSD != null) {
      data['USD'] = uSD!.toJson();
    }
    return data;
  }
}

class USD {
  dynamic price;
  dynamic volume24h;
  dynamic volumeChange24h;
  dynamic percentChange1h;
  dynamic percentChange24h;
  dynamic percentChange7d;
  dynamic percentChange30d;
  dynamic percentChange60d;
  dynamic percentChange90d;
  dynamic marketCap;
  dynamic marketCapDominance;
  dynamic fullyDilutedMarketCap;
  Null? tvl;
  String? lastUpdated;

  USD(
      {this.price,
      this.volume24h,
      this.volumeChange24h,
      this.percentChange1h,
      this.percentChange24h,
      this.percentChange7d,
      this.percentChange30d,
      this.percentChange60d,
      this.percentChange90d,
      this.marketCap,
      this.marketCapDominance,
      this.fullyDilutedMarketCap,
      this.tvl,
      this.lastUpdated});

  USD.fromJson(Map<String, dynamic> json) {
    price = json['price'];
    volume24h = json['volume_24h'];
    volumeChange24h = json['volume_change_24h'];
    percentChange1h = json['percent_change_1h'];
    percentChange24h = json['percent_change_24h'];
    percentChange7d = json['percent_change_7d'];
    percentChange30d = json['percent_change_30d'];
    percentChange60d = json['percent_change_60d'];
    percentChange90d = json['percent_change_90d'];
    marketCap = json['market_cap'];
    marketCapDominance = json['market_cap_dominance'];
    fullyDilutedMarketCap = json['fully_diluted_market_cap'];
    tvl = json['tvl'];
    lastUpdated = json['last_updated'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['price'] = price;
    data['volume_24h'] = volume24h;
    data['volume_change_24h'] = volumeChange24h;
    data['percent_change_1h'] = percentChange1h;
    data['percent_change_24h'] = percentChange24h;
    data['percent_change_7d'] = percentChange7d;
    data['percent_change_30d'] = percentChange30d;
    data['percent_change_60d'] = percentChange60d;
    data['percent_change_90d'] = percentChange90d;
    data['market_cap'] = marketCap;
    data['market_cap_dominance'] = marketCapDominance;
    data['fully_diluted_market_cap'] = fullyDilutedMarketCap;
    data['tvl'] = tvl;
    data['last_updated'] = lastUpdated;
    return data;
  }
}